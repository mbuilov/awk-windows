--- orig/gawk-5.0.1/test/childin.awk	2017-12-14 20:49:00.000000000 +0300
+++ gawk-5.0.1/test/childin.awk	2019-12-11 16:00:12.959996200 +0300
@@ -1 +1,2 @@
-BEGIN { "cat" | getline; print; close("cat") }
+#BEGIN { "cat" | getline; print; close("cat") }
+BEGIN { "find /v \"\"" | getline; print; close("find /v \"\"") }
--- orig/gawk-5.0.1/test/exitval2.awk	2017-12-14 20:49:00.000000000 +0300
+++ gawk-5.0.1/test/exitval2.awk	2019-12-11 16:53:54.706269500 +0300
@@ -1,3 +1,4 @@
-BEGIN { print "foo" | "read x ; echo $x ; exit 12" }
+#BEGIN { print "foo" | "read x ; echo $x ; exit 12" }
+BEGIN { print "foo" | "set /p x= & cmd /c \"(echo.%x%)\" & exit 12" }
 # this should still exit 0, as pointed out by kenny mccormack in
 # comp.lang.awk on 2 feb 2005
--- orig/gawk-5.0.1/test/getline5.awk	2017-12-14 20:53:45.000000000 +0300
+++ gawk-5.0.1/test/getline5.awk	2019-12-12 12:46:36.444824500 +0300
@@ -31,5 +31,6 @@
     system("echo 1 > f")
     while ((getline a[++c] < "f") > 0) {}
     print c
-    system("rm -f f")
+#    system("rm -f f")
+    system("del /q f")
 }
--- orig/gawk-5.0.1/test/iobug1.awk	2017-12-14 20:49:00.000000000 +0300
+++ gawk-5.0.1/test/iobug1.awk	2019-12-12 12:47:49.855023400 +0300
@@ -46,8 +46,11 @@
 #!/usr/bin/gawk -f
 
 BEGIN {
-	printf "" | "cat"             # [a]
-	getline line < "/dev/null"    # [b]
-	"true" | getline line         # [c]
+#	printf "" | "cat"             # [a]
+	printf "" | "find \"\""       # [a]
+#	getline line < "/dev/null"    # [b]
+	getline line < "NUL"          # [b]
+#	"true" | getline line         # [c]
+	"rem." | getline line         # [c]
 }
 # ================================================================================
--- orig/gawk-5.0.1/test/randtest.awk	1970-01-01 03:00:00.000000000 +0300
+++ gawk-5.0.1/test/randtest.awk	2019-12-12 14:17:56.167246700 +0300
@@ -0,0 +1,69 @@
+# this script was extracted from randtest.sh
+BEGIN{ 
+    srand(RANDOM);
+    nsamples=(NSAMPLES);
+    max_allowed_sigma=(MAX_ALLOWED_SIGMA);
+    nruns=(NRUNS);
+    for(tau=0;tau<nsamples/2;tau++) corr[tau]=0;
+
+    for(run=0;run<nruns;run++) {
+	sum=0;
+
+	# Fill an array with a sequence of samples that are a
+	# function of pairs of rand() values.
+
+	for(i=0;i<nsamples;i++) {
+	   samp[i]=((rand()-0.5)*(rand()-0.5))^2;
+	   sum=sum+samp[i];
+	   }
+
+	# Subtract off the mean of the sequence:
+
+	mean=sum/nsamples;
+	for(i=0;i<nsamples;i++) samp[i]=samp[i]-mean;
+
+	# Calculate an autocorrelation function on the sequence.
+	# Because the values of rand() should be independent, there
+	# should be no peaks in the autocorrelation.
+
+	for(tau=0;tau<nsamples/2;tau++) {
+	    sum=0;
+	    for(i=0;i<nsamples/2;i++) sum=sum+samp[i]*samp[i+tau];
+	    corr[tau]=corr[tau]+sum;
+	    }
+
+	}
+    # Normalize the autocorrelation to the tau=0 value.
+
+    max_corr=corr[0];
+    for(tau=0;tau<nsamples/2;tau++) corr[tau]=corr[tau]/max_corr;
+
+    # OPTIONALLY Print out the autocorrelation values:
+
+    # for(tau=0;tau<nsamples/2;tau++) print tau, corr[tau] > "pairpower_corr.data";
+
+    # Calculate the sigma for the non-zero tau values: 
+
+    power_sum=0;
+
+    for(tau=1;tau<nsamples/2;tau++) power_sum=power_sum+(corr[tau])^2;
+
+    sigma=sqrt(power_sum/(nsamples/2-1));
+
+    # See if any of the correlations exceed a reasonable number of sigma:
+
+    passed=1;
+    for(tau=1;tau<nsamples/2;tau++) {
+	if ( abs(corr[tau])/sigma > max_allowed_sigma ) {
+	    print "Tau=", tau ", Autocorr=", corr[tau]/sigma, "sigma";
+	    passed=0;
+	    }
+        }
+    if(!passed) {
+	print "Test failed."
+	exit(1);
+        }
+    else exit (0);
+    }
+
+function abs(abs_input) { return(sqrt(abs_input^2)) ; }
--- orig/gawk-5.0.1/test/rstest3.awk	2017-12-14 20:49:00.000000000 +0300
+++ gawk-5.0.1/test/rstest3.awk	2019-12-12 16:46:47.679991300 +0300
@@ -69,5 +69,6 @@
 # 
 BEGIN {
 	RS = ""
-	"echo x | tr -d '\\12'" | getline
+#	"echo x | tr -d '\\12'" | getline
+	"<NUL set /p\"=x\"" | getline
 }
--- orig/gawk-5.0.1/test/rstest4.awk	2017-12-14 20:49:00.000000000 +0300
+++ gawk-5.0.1/test/rstest4.awk	2019-12-13 11:21:50.591437800 +0300
@@ -61,7 +61,8 @@
     while (("echo" | getline) == 1)
 	;
     RS = ""
-    "echo \"a\n\nb\"" | getline y
+#    "echo \"a\n\nb\"" | getline y
+    "echo.a&echo.&echo.b" | getline y
     printf "y = <%s>\n", y	# ADR
     printf "x = <%s>\n", x	# ADR
 }
--- orig/gawk-5.0.1/test/rstest5.awk	2017-12-14 20:49:00.000000000 +0300
+++ gawk-5.0.1/test/rstest5.awk	2019-12-12 17:12:50.223363700 +0300
@@ -53,8 +53,11 @@
 # 
 BEGIN {
     RS = ""
-    "echo 'foo\n\nbaz'" | getline ; print
-    "echo 'foo\n\nbaz'" | getline ; print
-    "echo 'bar\n\nbaz'" | getline ; print
+#    "echo 'foo\n\nbaz'" | getline ; print
+#    "echo 'foo\n\nbaz'" | getline ; print
+#    "echo 'bar\n\nbaz'" | getline ; print
+    "echo.foo&echo.&echo.baz" | getline ; print
+    "echo.foo&echo.&echo.baz" | getline ; print
+    "echo.bar&echo.&echo.baz" | getline ; print
     printf "x = <%s>\n", x
 }
--- orig/gawk-5.0.1/test/sigpipe1.awk	2018-12-23 23:01:42.000000000 +0300
+++ gawk-5.0.1/test/sigpipe1.awk	2019-12-12 18:04:10.974572600 +0300
@@ -1,6 +1,7 @@
 BEGIN {
 	print "system"
-	command = "yes | true"
+#	command = "yes | true"
+	command = "(for /L %L in (0,0,1) do @dir) | rem"
 	system(command)
 
 	print "pipe to command"
--- orig/gawk-5.0.1/test/status-close.awk	2019-04-05 10:29:20.000000000 +0300
+++ gawk-5.0.1/test/status-close.awk	2019-12-13 11:44:48.589554000 +0300
@@ -1,12 +1,15 @@
 BEGIN {
-    cat  = "cat ; exit 3"
-    print system("echo xxx | (cat ; exit 4)")
+#    cat  = "cat ; exit 3"
+    cat  = "find /v \"\" & exit 3"
+#    print system("echo xxx | (cat ; exit 4)")
+    print system("echo xxx| (find /v \"\" & exit 4)")
 
     print "YYY" | cat
 
     print close(cat)
 
-    echo = "echo boo ; exit 5"
+#    echo = "echo boo ; exit 5"
+    echo = "echo boo& exit 5"
     echo | getline boo
     print "got", boo
 
