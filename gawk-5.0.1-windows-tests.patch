--- orig/gawk-5.0.1/test/beginfile1.ok	2017-12-14 20:53:45.000000000 +0300
+++ gawk-5.0.1/test/beginfile1.ok	2019-12-13 14:00:06.806889500 +0300
@@ -8,7 +8,7 @@
 In BEGINFILE:
 	FILENAME = file, FNR = 0, ERRNO = "No such file or directory"
 In BEGINFILE:
-	FILENAME = Makefile, FNR = 0, ERRNO = ""
-processing Makefile
+	FILENAME = Xfile, FNR = 0, ERRNO = ""
+processing Xfile
 In ENDFILE:
-	FILENAME = Makefile, FNR = 2, ERRNO = ""
+	FILENAME = Xfile, FNR = 2, ERRNO = ""
--- orig/gawk-5.0.1/test/beginfile2.bat	1970-01-01 03:00:00.000000000 +0300
+++ gawk-5.0.1/test/beginfile2.bat	2019-12-13 17:22:36.535266600 +0300
@@ -0,0 +1,82 @@
+:: ported version of beginfile2.sh
+:: beginfile2.bat --- test BEGINFILE/ENDFILE/getline/nextfile/exit combinations
+
+@echo off
+::set "AWK=../gawk.exe"
+set "AWKPROG=beginfile2.in"
+set "SCRIPT=%~nx0"
+
+if not defined AWK (
+        echo %0: You must set AWK >&2
+        exit /b 1
+)
+
+echo --Test 1a--
+%AWK% " /#TEST1#/, /#TEST2#/" %AWKPROG% > _beginfile2_prog
+%AWK% -f _beginfile2_prog %AWKPROG%
+echo --Test 1b--
+%AWK% -f _beginfile2_prog %AWKPROG% file/does/not/exist
+
+echo --Test 2--
+%AWK% " /#TEST2#/, /#TEST3#/" %AWKPROG% > _beginfile2_prog
+%AWK% -f _beginfile2_prog %AWKPROG% file/does/not/exist
+
+echo --Test 3--
+%AWK% " /#TEST3#/, /#TEST4#/" %AWKPROG% > _beginfile2_prog
+%AWK% -vsrc=%SCRIPT% -f _beginfile2_prog %AWKPROG%
+
+echo --Test 4--
+%AWK% " /#TEST4#/, /#TEST5#/" %AWKPROG% > _beginfile2_prog
+%AWK% -vsrc=%SCRIPT% -f _beginfile2_prog %AWKPROG%
+
+echo --Test 5--
+%AWK% " /#TEST5#/, /#TEST6#/" %AWKPROG% > _beginfile2_prog
+%AWK% -f _beginfile2_prog %AWKPROG%
+
+echo --Test 6--
+%AWK% " /#TEST6#/, /#TEST7#/" %AWKPROG% > _beginfile2_prog
+%AWK% -f _beginfile2_prog %AWKPROG%
+
+echo --Test 7--
+%AWK% " /#TEST7#/, /#TEST8#/" %AWKPROG% > _beginfile2_prog
+%AWK% -f _beginfile2_prog %AWKPROG% %SCRIPT%
+
+echo --Test 8--
+%AWK% " /#TEST8#/, /#TEST9#/" %AWKPROG% > _beginfile2_prog
+%AWK% -f _beginfile2_prog %AWKPROG%
+
+echo --Test 9a--
+%AWK% " /#TEST9#/, /#TEST10#/" %AWKPROG% > _beginfile2_prog
+%AWK% -f _beginfile2_prog file/does/not/exist %AWKPROG%
+echo --Test 9b--
+%AWK% -vskip=1 -f _beginfile2_prog file/does/not/exist %AWKPROG%
+
+echo --Test 10--
+%AWK% " /#TEST10#/, /#TEST11#/" %AWKPROG% > _beginfile2_prog
+%AWK% -f _beginfile2_prog %AWKPROG% %SCRIPT%
+
+echo --Test 11--
+%AWK% " /#TEST11#/, /#TEST12#/" %AWKPROG% > _beginfile2_prog
+%AWK% -f _beginfile2_prog %AWKPROG% %SCRIPT%
+
+echo --Test 12--
+%AWK% " /#TEST12#/, /#TEST13#/" %AWKPROG% > _beginfile2_prog
+%AWK% -f _beginfile2_prog %AWKPROG% %SCRIPT%
+
+echo --Test 13--
+%AWK% " /#TEST13#/, /#TEST14#/" %AWKPROG% > _beginfile2_prog
+%AWK% -f _beginfile2_prog %AWKPROG% %SCRIPT%
+
+echo --Test 14--
+%AWK% " /#TEST14#/, /#TEST15#/" %AWKPROG% > _beginfile2_prog
+%AWK% -f _beginfile2_prog %AWKPROG% %SCRIPT%
+
+echo --Test 15--
+%AWK% " /#TEST15#/, /#TEST16#/" %AWKPROG% > _beginfile2_prog
+%AWK% -f _beginfile2_prog %AWKPROG% %SCRIPT%
+
+echo --Test 16--
+%AWK% " /#TEST16#/, /#TEST17#/" %AWKPROG% > _beginfile2_prog
+%AWK% -f _beginfile2_prog %AWKPROG% %SCRIPT%
+
+del /q _beginfile2_prog
--- orig/gawk-5.0.1/test/beginfile2.ok	2017-12-14 20:53:45.000000000 +0300
+++ gawk-5.0.1/test/beginfile2.ok	2019-12-13 16:51:24.981391900 +0300
@@ -6,7 +6,7 @@
 In BEGIN
 In BEGINFILE: beginfile2.in
 In BEGINFILE: file/does/not/exist
-gawk: cmd. line:3: fatal: cannot open file `file/does/not/exist' for reading (No such file or directory)
+gawk: _beginfile2_prog:3: fatal: cannot open file `file/does/not/exist' for reading (No such file or directory)
 --Test 2--
 In BEGINFILE: beginfile2.in
 In ENDFILE: beginfile2.in
@@ -15,16 +15,16 @@
 In BEGINFILE: beginfile2.in
 In ENDFILE: beginfile2.in
 executing END rule
-In BEGINFILE: beginfile2.sh
-In ENDFILE: beginfile2.sh
+In BEGINFILE: beginfile2.bat
+In ENDFILE: beginfile2.bat
 1
 Done executing END rule
 --Test 4--
 In BEGINFILE: beginfile2.in
 ENDFILE: beginfile2.in
 executing END rule
-In BEGINFILE: beginfile2.sh
-ENDFILE: beginfile2.sh
+In BEGINFILE: beginfile2.bat
+ENDFILE: beginfile2.bat
 
 Done executing END rule
 --Test 5--
@@ -39,9 +39,9 @@
 In BEGINFILE: beginfile2.in
 In ENDFILE: beginfile2.in
 0
-In BEGINFILE: beginfile2.sh
-In BEGIN: beginfile2.sh
-In ENDFILE: beginfile2.sh
+In BEGINFILE: beginfile2.bat
+In BEGIN: beginfile2.bat
+In ENDFILE: beginfile2.bat
 1
 --Test 8--
 beginfile2.in
@@ -59,35 +59,35 @@
 82 82
 --Test 11--
 beginfile2.in
-beginfile2.sh
-gawk: cmd. line:9: fatal: non-redirected `getline' invalid inside `BEGINFILE' rule
+beginfile2.bat
+gawk: _beginfile2_prog:9: fatal: non-redirected `getline' invalid inside `BEGINFILE' rule
 --Test 12--
 In BEGINFILE: beginfile2.in
 1
 0
 In ENDFILE: beginfile2.in
-In BEGINFILE: beginfile2.sh
+In BEGINFILE: beginfile2.bat
 1
 0
-In ENDFILE: beginfile2.sh
+In ENDFILE: beginfile2.bat
 --Test 13--
 In BEGINFILE: beginfile2.in
 In END: beginfile2.in
 In ENDFILE: beginfile2.in
-In BEGINFILE: beginfile2.sh
+In BEGINFILE: beginfile2.bat
 --Test 14--
 In BEGINFILE: beginfile2.in
 In ENDFILE: beginfile2.in
 In END: beginfile2.in
-In BEGINFILE: beginfile2.sh
-In ENDFILE: beginfile2.sh
+In BEGINFILE: beginfile2.bat
+In ENDFILE: beginfile2.bat
 --Test 15--
 BEGINFILE: beginfile2.in
-BEGINFILE: beginfile2.sh
+BEGINFILE: beginfile2.bat
 2
 --Test 16--
 In BEGINFILE: beginfile2.in
 In BEGIN: beginfile2.in
 In Rule: beginfile2.in
 In ENDFILE:  beginfile2.in
-In BEGINFILE: beginfile2.sh
+In BEGINFILE: beginfile2.bat
--- orig/gawk-5.0.1/test/charasbytes.ok	2017-12-14 20:53:45.000000000 +0300
+++ gawk-5.0.1/test/charasbytes.ok	2019-12-13 17:46:37.384678500 +0300
@@ -1,3 +1,4 @@
-0000000 Z Z Z \n
- 5a 5a 5a 0a
-0000004
+00000000: 5A 30
+00000001: 5A 30
+00000002: 5A 30
+00000003: 0A 30
--- orig/gawk-5.0.1/test/childin.awk	2017-12-14 20:49:00.000000000 +0300
+++ gawk-5.0.1/test/childin.awk	2019-12-11 16:00:12.959996200 +0300
@@ -1 +1,2 @@
-BEGIN { "cat" | getline; print; close("cat") }
+#BEGIN { "cat" | getline; print; close("cat") }
+BEGIN { "find /v \"\"" | getline; print; close("find /v \"\"") }
--- orig/gawk-5.0.1/test/clos1way2.awk	2018-12-23 23:01:42.000000000 +0300
+++ gawk-5.0.1/test/clos1way2.awk	2019-12-13 21:06:14.792008700 +0300
@@ -1,6 +1,7 @@
 {
 	# We use "&&" and not ";" so it works with Windows shells as well.
-	cmd = "cat - 1>&2 && sleep 2"
+#	cmd = "cat - 1>&2 && sleep 2"
+	cmd = "find /v \"\" 1>&2 & ping -n 2 127.0.0.1 > NUL"
 	print |& cmd; close(cmd, "to")
 	fflush(cmd)
 	print |& cmd; print ERRNO
--- orig/gawk-5.0.1/test/clos1way2.ok	2018-12-23 23:01:42.000000000 +0300
+++ gawk-5.0.1/test/clos1way2.ok	2019-12-13 21:09:29.651950900 +0300
@@ -1,4 +1,4 @@
-gawk: clos1way2.awk:5: (FILENAME=- FNR=1) warning: fflush: cannot flush: two-way pipe `cat - 1>&2 && sleep 2' has closed write end
+gawk: clos1way2.awk:6: (FILENAME=- FNR=1) warning: fflush: cannot flush: two-way pipe `find /v "" 1>&2 & ping -n 2 127.0.0.1 > NUL' has closed write end
 test
-gawk: clos1way2.awk:6: (FILENAME=- FNR=1) fatal: print: attempt to write to closed write end of two-way pipe
+gawk: clos1way2.awk:7: (FILENAME=- FNR=1) fatal: print: attempt to write to closed write end of two-way pipe
 EXIT CODE: 2
--- orig/gawk-5.0.1/test/clos1way3.awk	2018-12-23 23:01:42.000000000 +0300
+++ gawk-5.0.1/test/clos1way3.awk	2019-12-13 21:51:26.622771800 +0300
@@ -1,6 +1,7 @@
 BEGIN {
 	# We use "&&" and not ";" so it works with Windows shells as well.
-	cmd = "cat - 1>&2 && sleep 2"
+#	cmd = "cat - 1>&2 && sleep 2"
+	cmd = "find /v \"\" 1>&2 & ping -n 2 127.0.0.1 > NUL"
 	print "test1" |& cmd
 	close(cmd, "to")
 	print "test2" |& cmd
--- orig/gawk-5.0.1/test/clos1way3.ok	2018-12-23 23:01:42.000000000 +0300
+++ gawk-5.0.1/test/clos1way3.ok	2019-12-13 21:51:30.850379200 +0300
@@ -1,3 +1,3 @@
 test1
-gawk: clos1way3.awk:6: fatal: print: attempt to write to closed write end of two-way pipe
+gawk: clos1way3.awk:7: fatal: print: attempt to write to closed write end of two-way pipe
 EXIT CODE: 2
--- orig/gawk-5.0.1/test/clos1way4.awk	2018-12-23 23:01:42.000000000 +0300
+++ gawk-5.0.1/test/clos1way4.awk	2019-12-13 21:54:53.962735900 +0300
@@ -1,6 +1,7 @@
 BEGIN {
 	# We use "&&" and not ";" so it works with Windows shells as well.
-	cmd = "cat - 1>&2 && sleep 2"
+#	cmd = "cat - 1>&2 && sleep 2"
+	cmd = "find /v \"\" 1>&2 & ping -n 2 127.0.0.1 > NUL"
 	printf "%s\n", "test1" |& cmd
 	close(cmd, "to")
 	printf "%s\n", "test2" |& cmd
--- orig/gawk-5.0.1/test/clos1way4.ok	2018-12-23 23:01:42.000000000 +0300
+++ gawk-5.0.1/test/clos1way4.ok	2019-12-13 21:55:04.789154900 +0300
@@ -1,3 +1,3 @@
 test1
-gawk: clos1way4.awk:6: fatal: printf: attempt to write to closed write end of two-way pipe
+gawk: clos1way4.awk:7: fatal: printf: attempt to write to closed write end of two-way pipe
 EXIT CODE: 2
--- orig/gawk-5.0.1/test/clos1way5.awk	2018-12-23 23:01:42.000000000 +0300
+++ gawk-5.0.1/test/clos1way5.awk	2019-12-13 22:16:13.360745400 +0300
@@ -1,6 +1,7 @@
 BEGIN {
 	# We use "&&" and not ";" so it works with Windows shells as well.
-	cmd = "echo test1&& echo test2&& sleep 2"
+#	cmd = "echo test1&& echo test2&& sleep 2"
+	cmd = "cmd /c \"echo test1& echo test2\"& ping -n 2 127.0.0.1 >NUL"
 	cmd |& getline x
 	print x
 	close(cmd, "from")
--- orig/gawk-5.0.1/test/clos1way5.ok	2018-12-23 23:01:42.000000000 +0300
+++ gawk-5.0.1/test/clos1way5.ok	2019-12-13 22:01:37.236518700 +0300
@@ -1,3 +1,3 @@
 test1
-gawk: clos1way5.awk:7: fatal: getline: attempt to read from closed read end of two-way pipe
+gawk: clos1way5.awk:8: fatal: getline: attempt to read from closed read end of two-way pipe
 EXIT CODE: 2
--- orig/gawk-5.0.1/test/clos1way6.awk	2019-04-05 10:29:20.000000000 +0300
+++ gawk-5.0.1/test/clos1way6.awk	2019-12-13 22:18:50.650965700 +0300
@@ -1,5 +1,6 @@
 BEGIN {
-	cmd = "cat - 1>&2; sleep 2"
+#	cmd = "cat - 1>&2; sleep 2"
+	cmd = "find /v \"\" 1>&2 & ping -n 2 127.0.0.1 > NUL"
 	PROCINFO[cmd, "NONFATAL"] = 1
 	print "test1" |& cmd; close(cmd, "to")
 	fflush(cmd)
--- orig/gawk-5.0.1/test/clos1way6.ok	2019-01-25 12:50:17.000000000 +0300
+++ gawk-5.0.1/test/clos1way6.ok	2019-12-13 22:20:11.741079200 +0300
@@ -1,3 +1,3 @@
-gawk: clos1way6.awk:5: warning: fflush: cannot flush: two-way pipe `cat - 1>&2; sleep 2' has closed write end
+gawk: clos1way6.awk:6: warning: fflush: cannot flush: two-way pipe `find /v "" 1>&2 & ping -n 2 127.0.0.1 > NUL' has closed write end
 test1
 Bad file descriptor
--- orig/gawk-5.0.1/test/exitval2.awk	2017-12-14 20:49:00.000000000 +0300
+++ gawk-5.0.1/test/exitval2.awk	2019-12-11 16:53:54.706269500 +0300
@@ -1,3 +1,4 @@
-BEGIN { print "foo" | "read x ; echo $x ; exit 12" }
+#BEGIN { print "foo" | "read x ; echo $x ; exit 12" }
+BEGIN { print "foo" | "set /p x= & cmd /c \"(echo.%x%)\" & exit 12" }
 # this should still exit 0, as pointed out by kenny mccormack in
 # comp.lang.awk on 2 feb 2005
--- orig/gawk-5.0.1/test/getline5.awk	2017-12-14 20:53:45.000000000 +0300
+++ gawk-5.0.1/test/getline5.awk	2019-12-12 12:46:36.444824500 +0300
@@ -31,5 +31,6 @@
     system("echo 1 > f")
     while ((getline a[++c] < "f") > 0) {}
     print c
-    system("rm -f f")
+#    system("rm -f f")
+    system("del /q f")
 }
--- orig/gawk-5.0.1/test/iobug1.awk	2017-12-14 20:49:00.000000000 +0300
+++ gawk-5.0.1/test/iobug1.awk	2019-12-12 12:47:49.855023400 +0300
@@ -46,8 +46,11 @@
 #!/usr/bin/gawk -f
 
 BEGIN {
-	printf "" | "cat"             # [a]
-	getline line < "/dev/null"    # [b]
-	"true" | getline line         # [c]
+#	printf "" | "cat"             # [a]
+	printf "" | "find \"\""       # [a]
+#	getline line < "/dev/null"    # [b]
+	getline line < "NUL"          # [b]
+#	"true" | getline line         # [c]
+	"rem." | getline line         # [c]
 }
 # ================================================================================
--- orig/gawk-5.0.1/test/randtest.awk	1970-01-01 03:00:00.000000000 +0300
+++ gawk-5.0.1/test/randtest.awk	2019-12-12 14:17:56.167246700 +0300
@@ -0,0 +1,69 @@
+# this script was extracted from randtest.sh
+BEGIN{ 
+    srand(RANDOM);
+    nsamples=(NSAMPLES);
+    max_allowed_sigma=(MAX_ALLOWED_SIGMA);
+    nruns=(NRUNS);
+    for(tau=0;tau<nsamples/2;tau++) corr[tau]=0;
+
+    for(run=0;run<nruns;run++) {
+	sum=0;
+
+	# Fill an array with a sequence of samples that are a
+	# function of pairs of rand() values.
+
+	for(i=0;i<nsamples;i++) {
+	   samp[i]=((rand()-0.5)*(rand()-0.5))^2;
+	   sum=sum+samp[i];
+	   }
+
+	# Subtract off the mean of the sequence:
+
+	mean=sum/nsamples;
+	for(i=0;i<nsamples;i++) samp[i]=samp[i]-mean;
+
+	# Calculate an autocorrelation function on the sequence.
+	# Because the values of rand() should be independent, there
+	# should be no peaks in the autocorrelation.
+
+	for(tau=0;tau<nsamples/2;tau++) {
+	    sum=0;
+	    for(i=0;i<nsamples/2;i++) sum=sum+samp[i]*samp[i+tau];
+	    corr[tau]=corr[tau]+sum;
+	    }
+
+	}
+    # Normalize the autocorrelation to the tau=0 value.
+
+    max_corr=corr[0];
+    for(tau=0;tau<nsamples/2;tau++) corr[tau]=corr[tau]/max_corr;
+
+    # OPTIONALLY Print out the autocorrelation values:
+
+    # for(tau=0;tau<nsamples/2;tau++) print tau, corr[tau] > "pairpower_corr.data";
+
+    # Calculate the sigma for the non-zero tau values: 
+
+    power_sum=0;
+
+    for(tau=1;tau<nsamples/2;tau++) power_sum=power_sum+(corr[tau])^2;
+
+    sigma=sqrt(power_sum/(nsamples/2-1));
+
+    # See if any of the correlations exceed a reasonable number of sigma:
+
+    passed=1;
+    for(tau=1;tau<nsamples/2;tau++) {
+	if ( abs(corr[tau])/sigma > max_allowed_sigma ) {
+	    print "Tau=", tau ", Autocorr=", corr[tau]/sigma, "sigma";
+	    passed=0;
+	    }
+        }
+    if(!passed) {
+	print "Test failed."
+	exit(1);
+        }
+    else exit (0);
+    }
+
+function abs(abs_input) { return(sqrt(abs_input^2)) ; }
--- orig/gawk-5.0.1/test/rstest3.awk	2017-12-14 20:49:00.000000000 +0300
+++ gawk-5.0.1/test/rstest3.awk	2019-12-12 16:46:47.679991300 +0300
@@ -69,5 +69,6 @@
 # 
 BEGIN {
 	RS = ""
-	"echo x | tr -d '\\12'" | getline
+#	"echo x | tr -d '\\12'" | getline
+	"<NUL set /p\"=x\"" | getline
 }
--- orig/gawk-5.0.1/test/rstest4.awk	2017-12-14 20:49:00.000000000 +0300
+++ gawk-5.0.1/test/rstest4.awk	2019-12-13 11:21:50.591437800 +0300
@@ -61,7 +61,8 @@
     while (("echo" | getline) == 1)
 	;
     RS = ""
-    "echo \"a\n\nb\"" | getline y
+#    "echo \"a\n\nb\"" | getline y
+    "echo.a&echo.&echo.b" | getline y
     printf "y = <%s>\n", y	# ADR
     printf "x = <%s>\n", x	# ADR
 }
--- orig/gawk-5.0.1/test/rstest5.awk	2017-12-14 20:49:00.000000000 +0300
+++ gawk-5.0.1/test/rstest5.awk	2019-12-12 17:12:50.223363700 +0300
@@ -53,8 +53,11 @@
 # 
 BEGIN {
     RS = ""
-    "echo 'foo\n\nbaz'" | getline ; print
-    "echo 'foo\n\nbaz'" | getline ; print
-    "echo 'bar\n\nbaz'" | getline ; print
+#    "echo 'foo\n\nbaz'" | getline ; print
+#    "echo 'foo\n\nbaz'" | getline ; print
+#    "echo 'bar\n\nbaz'" | getline ; print
+    "echo.foo&echo.&echo.baz" | getline ; print
+    "echo.foo&echo.&echo.baz" | getline ; print
+    "echo.bar&echo.&echo.baz" | getline ; print
     printf "x = <%s>\n", x
 }
--- orig/gawk-5.0.1/test/sigpipe1.awk	2018-12-23 23:01:42.000000000 +0300
+++ gawk-5.0.1/test/sigpipe1.awk	2019-12-12 18:04:10.974572600 +0300
@@ -1,6 +1,7 @@
 BEGIN {
 	print "system"
-	command = "yes | true"
+#	command = "yes | true"
+	command = "(for /L %L in (0,0,1) do @dir) | rem"
 	system(command)
 
 	print "pipe to command"
--- orig/gawk-5.0.1/test/status-close.awk	2019-04-05 10:29:20.000000000 +0300
+++ gawk-5.0.1/test/status-close.awk	2019-12-13 11:44:48.589554000 +0300
@@ -1,12 +1,15 @@
 BEGIN {
-    cat  = "cat ; exit 3"
-    print system("echo xxx | (cat ; exit 4)")
+#    cat  = "cat ; exit 3"
+    cat  = "find /v \"\" & exit 3"
+#    print system("echo xxx | (cat ; exit 4)")
+    print system("echo xxx| (find /v \"\" & exit 4)")
 
     print "YYY" | cat
 
     print close(cat)
 
-    echo = "echo boo ; exit 5"
+#    echo = "echo boo ; exit 5"
+    echo = "echo boo& exit 5"
     echo | getline boo
     print "got", boo
 
